<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.alpharogroup</groupId>
	<artifactId>mystic-crypt</artifactId>
	<version>4.0.0</version>
	<packaging>pom</packaging>
	<inceptionYear>2015</inceptionYear>
	<name>mystic-crypt</name>

	<url>https://github.com/astrapi69/mystic-crypt</url>

	<description>
		Cpyptograhic library parent project.
	</description>

	<scm>
		<connection>scm:git:git:@github.com:astrapi69/mystic-crypt.git</connection>
		<developerConnection>scm:git:git@github.com:astrapi69/mystic-crypt.git</developerConnection>
		<url>git:@github.com:astrapi69/mystic-crypt.git</url>
	</scm>

	<developers>

		<developer>
			<id>astrapi69</id>
			<name>Asterios Raptis</name>
			<timezone>Berlin</timezone>
			<roles>
				<role>Project manager</role>
				<role>Developer</role>
			</roles>
		</developer>

	</developers>

	<licenses>

		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt
			</url>
			<distribution>repo</distribution>
		</license>

	</licenses>

	<modules>
		<module>auth-security</module>
		<module>crypt-core</module>
		<module>randomizer</module>
	</modules>



	<properties>
		<!-- PROJECT encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- LOMBOK version -->
		<lombok.version>1.16.6</lombok.version>
		<!-- PARENT PROJECT versions -->
		<jaulp.core.version>4.0.0</jaulp.core.version>
		<jaulp.collections.version>${jaulp.core.version}</jaulp.collections.version>
		<jaulp.file.version>${jaulp.core.version}</jaulp.file.version>
		<jaulp.lang.version>${jaulp.core.version}</jaulp.lang.version>
		<jaulp.time.version>${jaulp.core.version}</jaulp.time.version>
		<jaulp.test.objects.version>${jaulp.core.version}</jaulp.test.objects.version>
		<!-- PARENT PROJECT versions -->
		<randomizer.version>${project.version}</randomizer.version>
		<!-- EXTERNAL LIBRARIES versions -->
		<commons-codec.version>1.10</commons-codec.version>
		<!-- LOGGING versions -->
		<slf4j.version>1.6.4</slf4j.version>
		<log4j.version>1.2.16</log4j.version>
		<!-- UNIT TEST versions -->
		<testng.version>6.9.4</testng.version>
		<junit.version>4.12</junit.version>
		<!-- MAVEN PLUGIN versions -->
		<maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
		<maven-compiler-plugin.source.version>1.8</maven-compiler-plugin.source.version>
		<maven-compiler-plugin.target.version>1.8</maven-compiler-plugin.target.version>
		<maven-compiler-plugin.compilerVersion>1.8</maven-compiler-plugin.compilerVersion>
		<maven-compiler-plugin.encoding>UTF-8</maven-compiler-plugin.encoding>
		<maven-compiler-plugin.optimize>true</maven-compiler-plugin.optimize>
		<maven-compiler-plugin.showWarnings>true</maven-compiler-plugin.showWarnings>
		<maven-compiler-plugin.debug>true</maven-compiler-plugin.debug>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
		<maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
		<license-maven-plugin.version>2.8</license-maven-plugin.version>
		<maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
		<maven-release-plugin.version>2.5.1</maven-release-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.5</nexus-staging-maven-plugin.version>
		<maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
		<maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
	</properties>


	<dependencyManagement>
		<dependencies>
			<!-- LOMBOK DEPENDENCIES -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<optional>true</optional>
			</dependency>
			<!-- UNIT DEPENDENCIES FOR TESTING -->
			<!-- JUNIT DEPENDENCY -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
			</dependency>
			<!-- TESTNG DEPENDENCY -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>${testng.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>${commons-codec.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.collections</artifactId>
				<version>${jaulp.collections.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.time</artifactId>
				<version>${jaulp.time.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.lang</artifactId>
				<version>${jaulp.lang.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.file</artifactId>
				<version>${jaulp.file.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>jaulp.test.objects</artifactId>
				<version>${jaulp.test.objects.version}</version>
			</dependency>

			<dependency>
				<groupId>de.alpharogroup</groupId>
				<artifactId>randomizer</artifactId>
				<version>${randomizer.version}</version>
			</dependency>

		</dependencies>

	</dependencyManagement>

	<dependencies>
		<!-- LOMBOK DEPENDENCIES -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<!-- UNIT TESTS DEPENDENCIES -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>

		<resources>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/package.html</exclude>
				</excludes>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/site</directory>
			</resource>

		</resources>

		<testResources>

			<testResource>
				<filtering>false</filtering>
				<directory>src/test/java</directory>
				<includes>
					<include>**</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
					<exclude>**/package.html</exclude>
				</excludes>
			</testResource>
			<testResource>
				<filtering>false</filtering>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>

		<pluginManagement>

			<plugins>

				<plugin>
					<inherited>true</inherited>
					<!-- NOTE: We don't need a groupId specification because the group is 
						org.apache.maven.plugins ...which is assumed by default. -->
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven-compiler-plugin.source.version}</source>
						<target>${maven-compiler-plugin.target.version}</target>
						<compilerVersion>${maven-compiler-plugin.compilerVersion}</compilerVersion>
						<encoding>${maven-compiler-plugin.encoding}</encoding>
						<optimize>${maven-compiler-plugin.optimize}</optimize>
						<showWarnings>${maven-compiler-plugin.showWarnings}</showWarnings>
						<debug>${maven-compiler-plugin.debug}</debug>
					</configuration>
				</plugin>
				<!-- Configuring Maven Source Plugin: To attach source artifacts to your 
					build we execute the source:jar goal from the source plugin during the package 
					phase. -->
				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Configuring Maven Javadoc Plugin: To attach javadoc artifacts to 
					your build we execute the javadoc:jar goal from the javadoc plugin. -->
				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<detectOfflineLinks>false</detectOfflineLinks>
						<minmemory>128m</minmemory>
						<maxmemory>256m</maxmemory>
						<notimestamp>true</notimestamp>
						<quiet>true</quiet>
						<links>
							<link>http://download.oracle.com/javase/1.5.0/docs/api</link>
							<link>http://download.oracle.com/javaee/5/api</link>
						</links>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadoc</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Signing with gpg -->
				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<configuration>
						<mavenExecutorId>forked-path</mavenExecutorId>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- The Nexus Staging Maven Plugin is the recommended way to deploy 
					your components to OSSRH and release them to the Central Repository. _______________ 
					If your version is a release version (does not end in -SNAPSHOT) and with 
					this setup in place, you can run a deployment to OSSRH and an automated release 
					to the Central Repository with the usual: mvn clean deploy _________________________ 
					With the property autoReleaseAfterClose set to false you can manually inspect 
					the staging repository in Nexus and trigger a release of the staging repository 
					later with: mvn nexus-staging:release. -->
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<!-- this is used for inheritance merges -->
							<phase>package</phase>
							<!-- append to the packaging phase. -->
							<goals>
								<goal>attached</goal>
								<!-- goals == mojos -->
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<suiteXmlFiles>
							<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
						</suiteXmlFiles>
					</configuration>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<additionalBuildcommands>
							<buildcommand>org.eclipse.m2e.core.maven2Builder</buildcommand>
						</additionalBuildcommands>
						<additionalProjectnatures>
							<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
							<projectnature>org.springsource.ide.eclipse.gradle.core.nature</projectnature>
						</additionalProjectnatures>
					</configuration>
				</plugin>

				<plugin>
					<inherited>true</inherited>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<header>src/main/resources/LICENSE.txt</header>
						<properties>
							<owner>Asterios Raptis</owner>
							<year>${project.inceptionYear}</year>
							<email>asterios.raptis@gmx.net</email>
						</properties>
						<excludes>
							<exclude>**/README</exclude>
							<exclude>**/pom.xml</exclude>
							<exclude>**/*.xml</exclude>
							<exclude>**/*.xsl</exclude>
							<exclude>**/*.xsd</exclude>
							<exclude>**/*.dtd</exclude>
							<exclude>**/*.html</exclude>
							<exclude>**/*.properties</exclude>
							<exclude>**/*.bat</exclude>
							<exclude>**/*.gradle</exclude>
							<exclude>**/*.MF</exclude>
							<exclude>**/*.txt</exclude>
							<exclude>**/*.vm</exclude>
							<exclude>src/test/resources/**</exclude>
							<exclude>src/main/resources/**</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>format</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

			</plugins>

		</pluginManagement>

		<plugins>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>

			<plugin>
				<inherited>true</inherited>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>

		</plugins>

	</build>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<profiles>

		<profile>
			<id>oss.sonatype.org-staged-release</id>
			<!-- This is the profile to use for releasing into the staged release 
				repo. We need to sign the artifacts. -->
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<build>
				<plugins>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>

				</plugins>
			</build>

			<distributionManagement>
				<snapshotRepository>
					<id>ossrh</id>
					<name>Sonatype Nexus Snapshots</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
				<repository>
					<id>ossrh</id>
					<name>Nexus Release Repository</name>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
			</distributionManagement>

		</profile>

		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- This profile is for generate or update the license header from source 
				files. for generate or update the license header you have to run this profile 
				with this goal license:format. -->
			<id>update-license-header</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>

					<plugin>
						<inherited>true</inherited>
						<groupId>com.mycila</groupId>
						<artifactId>license-maven-plugin</artifactId>
					</plugin>

				</plugins>
			</build>

		</profile>

		<profile>
			<id>release-javadoc-jar-with-dependencies</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-assembly-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>generate-reports</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<inherited>true</inherited>
						<artifactId>maven-surefire-plugin</artifactId>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

	<organization>
		<name>Alpha Ro Group UG (haftungsbeschrängt)</name>
		<url>http://www.alpharogroup.de/</url>
	</organization>

	<issueManagement>
		<url>https://github.com/astrapi69/mystic-crypt/issues</url>
		<system>github.com</system>
	</issueManagement>

</project>
