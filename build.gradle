/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'io.franzbecker.gradle-lombok' version '3.1.0'
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'de.alpharogroup'
version = '7.1-SNAPSHOT'
description = 'mystic-crypt'
sourceCompatibility = '1.8'

ext {
    lombokVersion = '1.18.8'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compile 'org.projectlombok:lombok:${lombokVersion}'
    annotationProcessor 'org.projectlombok:lombok:${lombokVersion}'
    compile 'de.alpharogroup:crypt-api:7.2'
    compile 'de.alpharogroup:crypt-data:7.1'
    compile 'de.alpharogroup:randomizer-core:6.1'
    compile 'commons-codec:commons-codec:1.12'
    compile 'de.alpharogroup:file-worker:5.2'
    compile 'de.alpharogroup:model-core:1.6.2'
    compile 'de.alpharogroup:xml-extensions:5'
    compile 'de.alpharogroup:silly-collections:5.2.1'
    compile 'org.bouncycastle:bcprov-jdk15on:1.62'
    compile 'org.bouncycastle:bcprov-ext-jdk15on:1.62'
    compile 'org.bouncycastle:bcpkix-jdk15on:1.62'
    compile 'de.alpharogroup:jobject-clone:3.1.2'
    compile 'de.alpharogroup:jobj-core:3.2.1'
    compile 'org.projectlombok:lombok:1.18.8'
    testCompile 'io.github.benas:random-beans:3.9.0'
    testCompile 'de.alpharogroup:test-objects:5.2'
    testCompile 'de.alpharogroup:jcommons-lang:5.2.2'
    testCompile 'de.alpharogroup:jobj-contract-verifier:3.2'
    testCompile 'org.meanbean:meanbean:2.0.3'
    testCompile 'org.testng:testng:6.14.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:2.28.2'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from(sourceSets.main.allJava)
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'mystic-crypt'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = '${project.artifactId}'
                description = 'The target of this project is to make encryption and decryption as simple as possible.'
                url = 'https://github.com/astrapi69/${project.artifactId}'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
                developers {
                    developer {
                        id = 'astrapi69'
                        name = 'Asterios Raptis'
                    }
                }
                scm {
                    connection = 'scm:git:git:@github.com:astrapi69/${project.artifactId}.git'
                    developerConnection = 'scm:git:git@github.com:astrapi69/${project.artifactId}.git'
                    url = 'git:@github.com:astrapi69/${project.artifactId}.git'
                }
            }
        }
    }
    repositories {
        maven {
//            credentials {
//                username project.property('ossrhUsername')
//                password project.property('ossrhPassword')
//            }
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useTestNG()
}
